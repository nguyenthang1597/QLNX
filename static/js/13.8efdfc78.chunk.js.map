{"version":3,"sources":["components/ChamCong/ChamCong.js","components/ChamCong/TheoDoi.js","components/ChamCong/index.js"],"names":["NewInput","styled","Input","_templateObject","ChamCong_ChamCong","_useState","useState","_useState2","Object","slicedToArray","arr","setArr","_useState3","moment","format","_useState4","dateStart","setDateStart","_useState5","_useState6","isLoading","setLoading","document","title","fetchData","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","tmp","res","_arr","wrap","_context","prev","next","axios","get","concat","HOST","sent","data","t0","stop","apply","this","arguments","uploadData","_ref2","_callee2","ngay","_context2","length","map","e","_tmp","objectSpread","post","chitiet","alert","console","log","handleTextInput","index","name","value","newArr","toConsumableArray","Number","parseInt","react_default","createElement","style","textAlign","styles","justifyContent","alignItems","marginLeft","type","data-date-format","max","Date","onChange","target","onClick","className","marginTop","key","ten","tiencong","min","ghichu","marginBottom","handleDateInput","setValue","_x","TheoDoi","start","end","setData","nv","setNV","_useState7","_useState8","sum","setSum","url","tmp2","tmp3","sort","b","forEach","element","reduce","cur","vskp","vsbd","Set","assign","i","el","Tab","div","ChamCong_templateObject","TabContent","_templateObject2","ChamCong","activePage","setActive"],"mappings":"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","file":"static/js/13.8efdfc78.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Table, Button, DivFlexRow } from '../../styles'\nimport { Input } from '../../styles'\nimport axios from 'axios';\nimport { HOST } from '../../Config'\nimport moment from 'moment'\nimport styled from 'styled-components';\n\nconst NewInput = styled(Input)`\n    background-color: transparent;\n    outline: none;\n    border: none;\n    text-align: center;\n`;\n\n\nexport default () => {\n    let [arr, setArr] = useState([]);\n    let [dateStart, setDateStart] = useState(moment().format(\"YYYY-MM-DD\"));\n    let [isLoading, setLoading] = useState(false);\n    document.title = 'Chấm công';\n    const fetchData = async () => {\n        let tmp = moment(dateStart).format('YYYY-MM-DD');\n        \n        setLoading(true);\n        try {\n            let res = await axios.get(`${HOST}/chamcong/theongay/ngay/${tmp}`);\n            let arr = res.data;\n            setLoading(false);\n            await setArr(arr);\n        } catch (error) {\n            \n        }\n    };\n    const uploadData = async () => {\n        if(arr.length){\n            try {\n                let ngay = moment(dateStart).format('YYYY-MM-DD');\n                let tmp = arr.map(e => {\n                    let _tmp = {...e};\n                    delete _tmp['ten'];\n                    delete _tmp['ma'];\n                    return _tmp;\n                });\n                let res = await axios.post(`${HOST}/chamcong/theongay/ngay/${ngay}`, {\n                    chitiet: tmp\n                });\n                alert('Thành công!');\n            } catch (error) {\n                console.log(error);\n                alert('Chấm công không thành công!');\n            }\n\n        }\n    };\n    const handleTextInput = (index, name, value) => {\n        let newArr = [...arr];\n        if(name ==='ghichu')\n            newArr[index][name] = value;\n        else\n        newArr[index][name] = Number.parseInt(value || 0);\n        setArr(newArr);\n    };\n    return (\n        <div>\n            <h1 style={{ textAlign: \"center\" }}>Chấm công</h1>\n            <DivFlexRow style={{ justifyContent: 'space-between', alignItems: 'center' }}>\n                <DivFlexRow style={{ alignItems: 'center' }}>\n                    <label style={{ marginLeft: 10 }}>Ngày: </label>\n                    <Input type=\"date\" data-date-format=\"dd mm yyyy\" max={new Date()} value={dateStart} style={{ marginLeft: 10 }} onChange={(e) => setDateStart(e.target.value)} />\n                </DivFlexRow>\n                <Button onClick={isLoading ? null : () => fetchData()}>\n                    {isLoading ? <i className=\"fas fa-spinner fa-pulse\"></i> : \"Lấy danh sách\" }\n                </Button>\n            </DivFlexRow>\n            <Table style={{ marginTop: 15 }}>\n                <tbody>\n                    <tr>\n                        <th>Nhân viên</th>\n                        <th>Tiền công</th>\n                        <th>VSPK</th>\n                        <th>VSBĐ</th>\n                        <th>Ghi chú</th>\n                    </tr>\n                    {\n                        arr.map((e, index) => (\n                            <tr key={index}>\n                                <td>{e.ten || ''}</td>\n                                <td>{e.tiencong || 0}</td>\n                                <td><NewInput type='number' min={0} value={arr[index]['vskp']} onChange={(e) => handleTextInput(index, 'vskp', e.target.value)}/></td>\n                                <td><NewInput type='number' min={0} value={arr[index]['vsbd']} onChange={(e) => handleTextInput(index, 'vsbd', e.target.value)}/></td>\n                                <td><NewInput value={arr[index].ghichu ? arr[index].ghichu: ''} onChange={(e) => handleTextInput(index, 'ghichu', e.target.value)}/></td>\n                            </tr>\n                        ))\n                    }\n                </tbody>\n            </Table>\n            <DivFlexRow style={{ marginTop: 25, marginBottom: 5, justifyContent: 'space-between' }}>\n                <label></label>\n                <Button onClick={() => uploadData()}>\n                    Lưu\n                </Button>\n            </DivFlexRow>\n        </div>\n    )\n}","import React, {useState } from 'react';\nimport { Table, Button, DivFlexRow } from '../../styles'\nimport { Input } from '../../styles'\nimport axios from 'axios';\nimport { HOST } from '../../Config'\nimport moment from 'moment'\nimport styled from 'styled-components';\n// const NewInput = styled(Input)`\n//     background-color: transparent;\n//     outline: none;\n//     border: none;\n//     text-align: center;\n// `\nconst handleDateInput = function(){\n    let [value, setValue] = useState(moment().format('YYYY-MM-DD'));\n    const onChange =async function(e){\n        await setValue(moment(e.target.value).format('YYYY-MM-DD'));\n    }\n\n    return {\n        value, onChange\n    }\n\n}\n\nexport default () => {\n    let start = handleDateInput();\n    let end = handleDateInput();\n    let [data, setData] = useState([]);\n    let [nv, setNV] = useState([]);\n    let [sum, setSum] = useState({});\n    const fetchData = async () => {\n        let url = `${HOST}/statistic/chamcong/employee?start=${start.value}&end=${end.value}`;\n        try {\n            let res =  await axios.get(url);\n            let arr = res.data;\n            if(arr[0]){\n                let tmp = arr[0].data.map(e => e.ten).sort((a, b) => a < b);\n                let tmp2 = [];\n                arr.forEach(element => {\n                    tmp2 = tmp2.concat(element.data)\n                });\n                let  tmp3 = tmp2.reduce((prev, cur) => {\n                    if(prev[cur.ten]){\n                        prev[cur.ten] += cur.tiencong + cur.vskp + cur.vsbd;\n                    }\n                    else\n                        prev[cur.ten] = cur.tiencong + cur.vskp + cur.vsbd;\n                    return prev;\n                }, {});\n                setSum(tmp3)\n                \n                setNV([...new Set(tmp)])\n            }\n            \n            setData(arr);\n        } catch (error) {\n            console.log(error);\n            alert('Lay danh sach khong thanh cong!');\n        }\n    }\n    return (\n        <div>\n            <h1 style={{ textAlign: \"center\" }}>Theo dõi</h1>\n            <DivFlexRow style={{ justifyContent: 'space-between', alignItems: 'center' }}>\n                <DivFlexRow style={{ alignItems: 'center' }}>\n                    <label style={{ marginLeft: 10 }}>Ngày bắt đầu: </label>\n                    <Input type=\"date\" {...start}/>\n                    <label style={{ marginLeft: 10 }}>Ngày kết thúc: </label>\n                    <Input type=\"date\" {...end}/>\n                </DivFlexRow>\n                <Button onClick={fetchData}>\n                    Lấy danh  sách\n                </Button>\n            </DivFlexRow>\n            <Table style={{ marginTop: 15 }}>\n                <tbody>\n                    <tr>\n                       {\n                           nv.length > 0 && <th>Ngay</th>\n                       }\n                       {\n                        nv.map((e, i) => <th key={i}>{e}</th>)\n                       }\n                    </tr>\n                    {\n                        data.map((e, index) => (\n                            <tr key={index}>\n                                <td>{e.ngay}</td>\n                                {\n                                    e.data.map((el, i) => <td key={i}>{el.tiencong + el.vsbd + el.vskp}</td>)\n                                }\n                            </tr>\n                        ))\n                    }\n                    <tr>\n                        {nv.length > 0 && <td>Tổng tiền</td>}\n                        {\n                            nv.map((e, i) => <td key={i}>{sum[e]}</td>)\n                        }\n                    </tr>\n                </tbody>\n            </Table>\n        </div>\n    )\n}","import React, {useState} from 'react';\nimport styled from 'styled-components';\nimport RenderChamCong from './ChamCong'\nimport TheoDoi from './TheoDoi'\n\nconst Tab = styled.div`\n        overflow: hidden;\n        border-bottom: 1px solid #ccc;\n        \n        button {\n            background-color: inherit;\n            float: left;\n            border: none;\n            outline: none;\n            cursor: pointer;\n            padding: 14px 16px;\n            transition: 0.3s;\n            font-size: 17px;\n            \n            :hover {\n                background-color: #ddd;\n            }\n            \n            &.active {\n                background-color: #ccc;\n            }\n        }\n`;\n\nconst TabContent = styled.div`\n       display: none;\n       \n       &.active {\n        display: block;\n       }\n`;\n\nconst ChamCong = () => {\n\n    let [activePage,setActive] = useState(1);\n\n    return (\n        <div>\n            <Tab>\n                <button className={activePage === 1 ? \"active\" : \"\"} onClick={() => setActive(1)}>Chấm công</button>\n                <button className={activePage === 2 ? \"active\" : \"\"} onClick={() => setActive(2)}>Theo dõi</button>\n            </Tab>\n\n            <TabContent className={activePage === 1 ? \"active\" : \"\"}>\n                <RenderChamCong/>\n            </TabContent>\n\n            <TabContent className={activePage === 2 ? \"active\" : \"\"}>\n                <TheoDoi/>\n            </TabContent>\n\n        </div>\n    )\n};\n\nexport default ChamCong;"],"sourceRoot":""}